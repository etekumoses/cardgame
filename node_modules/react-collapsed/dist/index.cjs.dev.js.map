{"version":3,"sources":["../src/index.ts","../src/useCollapse.ts","../src/utils.ts","../src/Collapse.ts"],"sourcesContent":["export { useCollapse as default } from './useCollapse'\n","import { useId, useState, MouseEventHandler, useRef } from 'react'\nimport { Collapse, CollapseParams } from './Collapse'\nimport {\n  callAll,\n  mergeRefs,\n  useControlledState,\n  useLayoutEffect,\n} from './utils'\n\nexport interface UseCollapseParams\n  extends Omit<CollapseParams, 'getToggleElement' | 'getCollapseElement'> {\n  isExpanded?: boolean\n}\n\nexport function useCollapse(options: UseCollapseParams = {}) {\n  const {\n    isExpanded: propExpanded,\n    defaultExpanded: propDefaultExpanded,\n    onExpandedChange,\n    ...opts\n  } = options\n\n  const id = useId()\n  const collapseEl = useRef<HTMLElement | null>(null)\n  const [toggleEl, setToggleEl] = useState<HTMLElement | null>(null)\n  const [isExpanded, setExpanded] = useControlledState(\n    propExpanded,\n    propDefaultExpanded,\n    onExpandedChange\n  )\n\n  const resolvedOptions: CollapseParams = {\n    id,\n    ...opts,\n    getCollapseElement: () => collapseEl.current,\n    getToggleElement: () => toggleEl,\n    defaultExpanded: isExpanded,\n    onExpandedChange: setExpanded,\n  }\n\n  const [instance] = useState(() => new Collapse(resolvedOptions))\n\n  instance.setOptions(resolvedOptions)\n\n  useLayoutEffect(() => {\n    if (isExpanded) {\n      instance.open()\n    } else {\n      instance.close()\n    }\n  }, [isExpanded, instance])\n\n  const assignRef = (node: HTMLElement | null) => {\n    if (collapseEl.current !== node) {\n      collapseEl.current = node\n      if (!!node) {\n        instance.init()\n      }\n    }\n  }\n\n  return {\n    getCollapseProps({\n      refKey = 'ref',\n      ...rest\n    }: { refKey?: string; [k: string]: unknown } = {}) {\n      const theirRef: any = rest[refKey]\n      if (!instance) {\n        return { [refKey]: mergeRefs(theirRef, assignRef) }\n      }\n\n      const { onTransitionEndHandler, ...props } = instance.getCollapse()\n\n      return {\n        ...rest,\n        ...props,\n        [refKey]: mergeRefs(theirRef, assignRef),\n        onTransitionEnd:\n          onTransitionEndHandler as unknown as React.TransitionEventHandler,\n      }\n    },\n    getToggleProps({\n      disabled,\n      onClick = () => {},\n      refKey = 'ref',\n      ...rest\n    }: {\n      disabled?: boolean\n      onClick?: MouseEventHandler<any>\n      refKey?: string\n      [k: string]: unknown\n    } = {}) {\n      const theirRef: any = rest[refKey]\n      if (!instance) {\n        return { [refKey]: mergeRefs(theirRef, setToggleEl) }\n      }\n\n      const { onClickHandler, ...props } = instance.getToggle({\n        disabled,\n      })\n      return {\n        ...rest,\n        ...props,\n        [refKey]: mergeRefs(theirRef, setToggleEl),\n        onClick: callAll(onClickHandler, onClick),\n      }\n    },\n    isExpanded,\n    setExpanded,\n  }\n}\n","import * as React from 'react'\nimport { useState, useRef, useEffect, useCallback } from 'react'\nimport warning from 'tiny-warning'\n\ntype AnyFunction = (...args: any[]) => unknown\n\n// Helper function for render props. Sets a function to be called, plus any additional functions passed in\nexport const callAll =\n  (...fns: AnyFunction[]) =>\n  (...args: any[]): void =>\n    fns.forEach((fn) => fn && fn(...args))\n\n// https://github.com/mui-org/material-ui/blob/da362266f7c137bf671d7e8c44c84ad5cfc0e9e2/packages/material-ui/src/styles/transitions.js#L89-L98\nexport function getAutoHeightDuration(height: number | string): number {\n  if (!height || typeof height === 'string') {\n    return 0\n  }\n\n  const constant = height / 36\n\n  // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10\n  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10)\n}\n\n/**\n * React.Ref uses the readonly type `React.RefObject` instead of\n * `React.MutableRefObject`, We pretty much always assume ref objects are\n * mutable (at least when we create them), so this type is a workaround so some\n * of the weird mechanics of using refs with TS.\n */\nexport type AssignableRef<ValueType> =\n  | {\n      bivarianceHack(instance: ValueType | null): void\n    }['bivarianceHack']\n  | React.MutableRefObject<ValueType | null>\n\nexport function assignRef<RefValueType = any>(\n  ref: AssignableRef<RefValueType> | null | undefined,\n  value: any\n) {\n  if (ref == null) return\n  if (typeof ref === 'function') {\n    ref(value)\n  } else {\n    try {\n      ref.current = value\n    } catch (error) {\n      throw new Error(`Cannot assign value \"${value}\" to ref \"${ref}\"`)\n    }\n  }\n}\n\n/**\n * Passes or assigns a value to multiple refs (typically a DOM node). Useful for\n * dealing with components that need an explicit ref for DOM calculations but\n * also forwards refs assigned by an app.\n *\n * @param refs Refs to fork\n */\nexport function mergeRefs<RefValueType = any>(\n  ...refs: (AssignableRef<RefValueType> | null | undefined)[]\n) {\n  if (refs.every((ref) => ref == null)) {\n    return null\n  }\n  return (node: any) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node)\n    })\n  }\n}\n\nexport function useEvent<T extends (...args: any[]) => any>(callback?: T) {\n  const ref = useRef<T | undefined>(callback)\n\n  useEffect(() => {\n    ref.current = callback\n  })\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useCallback(((...args: any) => ref.current?.(...args)) as T, [])\n}\n\nexport function useControlledState<T>(\n  value: T | undefined,\n  defaultValue: T | undefined,\n  callback?: (value: T) => void\n): [T, (update: T | ((value: T) => T)) => void] {\n  const [state, setState] = useState<T>(defaultValue as T)\n  const initiallyControlled = useRef(typeof value !== 'undefined')\n  const effectiveValue = initiallyControlled.current ? value : state\n  const cb = useEvent(callback)\n\n  const onChange = useCallback(\n    (update: React.SetStateAction<T>) => {\n      const setter = update as (value?: T) => T\n      const newValue =\n        typeof update === 'function' ? setter(effectiveValue) : update\n\n      if (!initiallyControlled.current) {\n        setState(newValue)\n      }\n\n      cb?.(newValue)\n    },\n    [cb, effectiveValue]\n  )\n\n  useEffect(() => {\n    warning(\n      !(initiallyControlled.current && value == null),\n      'useCollapse is changing from controlled to uncontrolled. useCollapse should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled collapse for the lifetime of the component. Check the `isExpanded` prop.'\n    )\n    warning(\n      !(!initiallyControlled.current && value != null),\n      'useCollapse is changing from uncontrolled to controlled. useCollapse should not switch from uncontrolled to controlled (or vice versa). Decide between using a controlled or uncontrolled collapse for the lifetime of the component. Check the `isExpanded` prop.'\n    )\n  }, [value])\n\n  return [effectiveValue as T, onChange]\n}\n\nexport const useLayoutEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : useEffect\n\nexport function paddingWarning(element: HTMLElement): void {\n  if (process.env.NODE_ENV !== 'production') {\n    if (window && 'getComputedStyle' in window) {\n      const { paddingTop, paddingBottom } = window.getComputedStyle(element)\n      const hasPadding =\n        (paddingTop && paddingTop !== '0px') ||\n        (paddingBottom && paddingBottom !== '0px')\n\n      warning(\n        !hasPadding,\n        'Collapse: Padding applied to the collapse element will cause the animation to break and not perform as expected. To fix, apply equivalent padding to the direct descendent of the collapse element.'\n      )\n    }\n  }\n}\n\n/**\n * generates a UID factory\n * @example\n * const uid = generateUID();\n * uid(object) = 1;\n * uid(object) = 1;\n * uid(anotherObject) = 2;\n */\nexport const generateUID = () => {\n  let counter = 1\n\n  const map = new WeakMap<any, number>()\n\n  /**\n   * @borrows {uid}\n   */\n  const uid = (item: any, index?: number): string => {\n    if (typeof item === 'number' || typeof item === 'string') {\n      return index ? `idx-${index}` : `val-${item}`\n    }\n\n    if (!map.has(item)) {\n      map.set(item, counter++)\n\n      return uid(item)\n    }\n\n    return 'uid' + map.get(item)\n  }\n\n  return uid\n}\n\n/**\n * @name uid\n * returns an UID associated with {item}\n * @param {Object} item - object to generate UID for\n * @param {Number} index, a fallback index\n * @example\n * uid(object) == 1;\n * uid(object) == 1;\n * uid(anotherObject) == 2;\n * uid(\"not object\", 42) == 42\n */\nexport const uid = generateUID()\n","import { uid, getAutoHeightDuration, paddingWarning } from './utils'\n\ntype Style = Partial<CSSStyleDeclaration>\n\nexport interface CollapseParams {\n  /** If true, the collapse element will initialize expanded */\n  defaultExpanded?: boolean\n  /** Height in pixels that the collapse element collapses to */\n  collapsedHeight?: number\n  /** Styles applied to the collapse upon expanding */\n  expandStyles?: Style\n  /** Styles applied to the collapse upon collapsing */\n  collapseStyles?: Style\n  /** Timing function for the transition */\n  easing?: string\n  /**\n   * Duration of the expand/collapse animation.\n   * If 'auto', the duration will be calculated based on the height of the collapse element\n   */\n  duration?: number | 'auto'\n  /** If true, the animation will be disabled. Useful for disabling if the user prefers reduced motion */\n  hasDisabledAnimation?: boolean\n  /** Unique ID used for accessibility */\n  id?: string\n  /** Handler called when the expanded state changes */\n  onExpandedChange?: (state: boolean) => void\n  /** Handler called when the collapse transition starts */\n  onCollapseStart?: () => void\n  /** Handler called when the collapse transtion ends */\n  onCollapseEnd?: () => void\n  /** Handler called when the expand transition starts */\n  onExpandStart?: () => void\n  /** Handler called when the expand transition end */\n  onExpandEnd?: () => void\n  /** Function that returns a reference to the element that expands and collapses */\n  getCollapseElement: () => HTMLElement | null | undefined\n  /** Function that returns a reference to the toggle for the collapse region */\n  getToggleElement?: () => HTMLElement | null | undefined\n}\n\nexport class Collapse {\n  isExpanded: boolean\n  options!: CollapseParams\n  private id!: string\n  private collapseElement: HTMLElement | null | undefined = null\n  private isMounted = false\n\n  constructor(params: CollapseParams) {\n    this.setOptions(params)\n    this.isExpanded = Boolean(this.options.defaultExpanded)\n    this.init()\n    this.isMounted = true\n  }\n\n  init = () => {\n    const collapseElement = this.options.getCollapseElement()\n    if (this.collapseElement !== collapseElement) {\n      this.collapseElement = collapseElement\n      if (!this.isExpanded) {\n        this.setStyles(this.getCollapsedStyles())\n      }\n    }\n  }\n\n  private getCollapsedStyles = (): Style => {\n    return {\n      display: this.options.collapsedHeight === 0 ? 'none' : 'block',\n      height: `${this.options.collapsedHeight}px`,\n      overflow: 'hidden',\n    }\n  }\n\n  setOptions = (\n    update: CollapseParams | ((prev: CollapseParams) => CollapseParams)\n  ) => {\n    const opts = typeof update === 'function' ? update(this.options) : update\n\n    Object.entries(opts).forEach(([key, value]) => {\n      if (typeof value === 'undefined') delete (opts as any)[key]\n    })\n\n    this.options = {\n      duration: 'auto',\n      easing: 'cubic-bezier(0.4, 0, 0.2, 1)',\n      expandStyles: {},\n      collapseStyles: {},\n      hasDisabledAnimation: false,\n      collapsedHeight: 0,\n      defaultExpanded: false,\n      onExpandedChange() {},\n      ...opts,\n    }\n\n    this.id = this.options.id ?? `collapse-${uid(this)}`\n  }\n\n  private setStyles = (styles: Style) => {\n    const target = this.options.getCollapseElement()\n    if (!target) {\n      return\n    }\n    for (const property in styles) {\n      const value = styles[property]\n      if (value) {\n        target.style[property] = value\n      } else {\n        target.style.removeProperty(property)\n      }\n    }\n  }\n\n  private getTransitionStyles = (height: number | string) => {\n    if (this.options.hasDisabledAnimation) {\n      return ''\n    }\n    const duration =\n      this.options.duration === 'auto'\n        ? getAutoHeightDuration(height)\n        : this.options.duration\n    return `height ${duration}ms ${this.options.easing}`\n  }\n\n  private handleTransitionEnd = (e: TransitionEvent) => {\n    if (e.propertyName !== 'height') {\n      return\n    }\n\n    if (this.isExpanded) {\n      this.setStyles({\n        height: '',\n        overflow: '',\n        transition: '',\n        display: '',\n      })\n      this.options.onExpandEnd?.()\n    } else {\n      this.setStyles({\n        ...this.getCollapsedStyles(),\n        transition: '',\n      })\n      this.options.onCollapseEnd?.()\n    }\n  }\n\n  open = (): void => {\n    // don't repeat if already open\n    if (this.isExpanded || !this.isMounted) {\n      return\n    }\n\n    const target = this.options.getCollapseElement()\n    if (!target) {\n      return\n    }\n\n    this.isExpanded = true\n    this.options.onExpandedChange?.(true)\n    this.options.onExpandStart?.()\n    paddingWarning(target)\n    requestAnimationFrame(() => {\n      this.setStyles({\n        ...this.options.expandStyles,\n        display: 'block',\n        overflow: 'hidden',\n        height: `${this.options.collapsedHeight}px`,\n      })\n      requestAnimationFrame(() => {\n        const height = target.scrollHeight\n\n        // Order important! So setting properties directly\n        target.style.transition = this.getTransitionStyles(height)\n        target.style.height = `${height}px`\n      })\n    })\n  }\n\n  close = () => {\n    // don't repeat if already closed\n    if (!this.isExpanded) {\n      return\n    }\n\n    const target = this.options.getCollapseElement()\n    if (!target) {\n      return\n    }\n\n    if (!this.isMounted) {\n      this.init()\n      return\n    }\n\n    this.isExpanded = false\n    this.options.onExpandedChange?.(false)\n    this.options.onCollapseStart?.()\n    requestAnimationFrame(() => {\n      const height = target.scrollHeight\n      this.setStyles({\n        ...this.options.collapseStyles,\n        transition: this.getTransitionStyles(height),\n        height: `${height}px`,\n      })\n      requestAnimationFrame(() => {\n        this.setStyles({\n          height: `${this.options.collapsedHeight}px`,\n          overflow: 'hidden',\n        })\n      })\n    })\n  }\n\n  toggle = () => {\n    if (this.isExpanded) {\n      this.close()\n    } else {\n      this.open()\n    }\n  }\n\n  getCollapse = () => {\n    const hasToggle = Boolean(this.options.getToggleElement?.())\n    return {\n      id: this.id,\n      'aria-hidden': this.isExpanded ? undefined : true,\n      onTransitionEndHandler: this.handleTransitionEnd,\n      style: {\n        boxSizing: 'border-box' as const,\n      },\n      role: 'region',\n      'aria-labelledby': hasToggle ? `${this.id}-toggle` : undefined,\n    }\n  }\n\n  getToggle = (\n    { disabled }: { disabled?: boolean } = { disabled: false }\n  ): {\n    onClickHandler: () => void\n    id: string\n    'aria-controls': string\n    'aria-expanded': boolean\n    disabled?: boolean\n    type?: 'button'\n    'aria-disabled'?: boolean\n    role?: 'button'\n    tabIndex?: 0 | -1\n  } => {\n    const toggleElement = this.options.getToggleElement?.()\n    const isButton = toggleElement ? toggleElement.tagName === 'BUTTON' : false\n    const props: any = {\n      onClickHandler: disabled ? () => {} : this.toggle,\n      id: `${this.id}-toggle`,\n      'aria-controls': this.id,\n      'aria-expanded': this.isExpanded,\n    }\n    if (isButton) {\n      props.type = 'button'\n      props.disabled = disabled ? true : undefined\n    } else {\n      props['aria-disabled'] = disabled ? true : undefined\n      props.role = 'button'\n      props.tabIndex = disabled ? -1 : 0\n    }\n    return props\n  }\n}\n"],"mappings":"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","names":["import_react","warning","useLayoutEffect","uid","useLayoutEffect","assignRef","_a"]}